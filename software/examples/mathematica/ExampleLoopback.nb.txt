Needs["NETLink`"]
LoadNETAssembly["Tinkerforge",NotebookDirectory[]<>"../../.."]

host="localhost"
port=4223
uid="XYZ"(*Change XYZ to the UID of your CAN Bricklet 2.0*)

(*Create IPConnection and device object*)
ipcon=NETNew["Tinkerforge.IPConnection"]
can=NETNew["Tinkerforge.BrickletCANV2",uid,ipcon]
ipcon@Connect[host,port]

(*Configure transceiver for loopback mode*)
can@SetTransceiverConfiguration[1000000,625,
                                Tinkerforge`BrickletCANV2`TRANSCEIVERUMODEULOOPBACK]

(*Callback function for frame read callback*)
FrameReadCB[sender_,frameType_,identifier_,data_]:=
 Module[{},
  If[frameType==Tinkerforge`BrickletCANV2`FRAMEUTYPEUSTANDARDUDATA,Print["Frame Type: Standard Data"]];
  If[frameType==Tinkerforge`BrickletCANV2`FRAMEUTYPEUSTANDARDUREMOTE,Print["Frame Type: Standard Remote"]];
  If[frameType==Tinkerforge`BrickletCANV2`FRAMEUTYPEUEXTENDEDUDATA,Print["Frame Type: Extended Data"]];
  If[frameType==Tinkerforge`BrickletCANV2`FRAMEUTYPEUEXTENDEDUREMOTE,Print["Frame Type: Extended Remote"]];
  Print["Identifier: "<>ToString[identifier]];
  Print["Data (Length: "<>ToString[N[Length[data]]]<>"): "<>ToString[data]]
 ]

AddEventHandler[can@FrameReadCallback,FrameReadCB]

(*Enable frame read callback*)
can@SetFrameReadCallbackConfiguration[True]

(*Write standard data frame with identifier 1742 and 3 bytes of data*)
can@WriteFrame[Tinkerforge`BrickletCANV2`FRAMEUTYPEUSTANDARDUDATA,1742,{42,23,17}]

Input["Click OK to exit"]

can@SetFrameReadCallbackConfiguration[False]

ipcon@Disconnect[]
ReleaseNETObject[can]
ReleaseNETObject[ipcon]
